services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: uzmart_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: uzmart_db
      POSTGRES_USER: uzmart_user
      POSTGRES_PASSWORD: uzmart_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - uzmart_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: uzmart_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uzmart_network

  # Laravel Backend API
  admin_backend:
    build:
      context: ./admin_backend
      dockerfile: Dockerfile
    container_name: uzmart_admin_backend
    restart: unless-stopped
    env_file:
      - ./admin_backend/.env
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=uzmart_db
      - DB_USERNAME=uzmart_user
      - DB_PASSWORD=uzmart_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8000"
    volumes:
      - ./admin_backend:/var/www/html
      - admin_backend_storage:/var/www/html/storage
      - admin_backend_bootstrap_cache:/var/www/html/bootstrap/cache
    depends_on:
      - postgres
      - redis
    networks:
      - uzmart_network

  # React Admin Frontend
  admin_frontend:
    build:
      context: ./admin_frontend
      dockerfile: Dockerfile
    container_name: uzmart_admin_frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_WS_URL=ws://localhost:6001
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./admin_frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - admin_backend
    networks:
      - uzmart_network

  # Next.js Web Frontend
  web_frontend:
    build:
      context: ./web_frontend
      dockerfile: Dockerfile
    container_name: uzmart_web_frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://admin_backend:8000/api
      - NEXT_PUBLIC_WS_URL=ws://admin_backend:6001
    volumes:
      - ./web_frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - admin_backend
    networks:
      - uzmart_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: uzmart_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - admin_backend
      - admin_frontend
      - web_frontend
    networks:
      - uzmart_network

  # Laravel WebSocket Server
  websocket:
    build:
      context: ./admin_backend
      dockerfile: Dockerfile.websocket
    container_name: uzmart_websocket
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=uzmart_db
      - DB_USERNAME=uzmart_user
      - DB_PASSWORD=uzmart_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./admin_backend:/var/www/html
    depends_on:
      - postgres
      - redis
      - admin_backend
    networks:
      - uzmart_network

volumes:
  postgres_data:
  redis_data:
  admin_backend_storage:
  admin_backend_bootstrap_cache:

networks:
  uzmart_network:
    driver: bridge
